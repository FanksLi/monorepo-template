(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[13],{MZF8:function(e,t,n){"use strict";var o=n("ogwx");n.d(t,"a",(function(){return o["b"]}));n("VCU9")},OYlG:function(e,t,n){"use strict";n.r(t);var o=n("mn0l"),s=n("3Nsx"),a=n.n(s),u=n("RGYn"),i=n("DBVu"),l=n("GAyR"),r=n("2KoA"),c="import React from 'react';\nimport useToggle from '../index';\n\nexport default function Demo() {\n  const [isToggled, actions] = useToggle(false);\n  return (\n    <div>\n      <div>isToggled: {isToggled ? 'true' : 'false'}</div>\n      <button onClick={actions.toggle}>Toggle</button>\n    </div>\n  );\n}",d="import { useMemo, useState } from 'react';\n\nexport interface Actions<T> {\n  setLeft: () => void;\n  setRight: () => void;\n  set: (value: T) => void;\n  toggle: () => void;\n}\n\nfunction useToggle<T = boolean>(): [boolean, Actions<T>];\n\nfunction useToggle<T>(defaultValue: T): [T, Actions<T>];\n\nfunction useToggle<T, U>(defaultValue: T, reverseValue: U): [T | U, Actions<T | U>];\n\nfunction useToggle<D, R>(defaultValue: D = false as unknown as D, reverseValue?: R) {\n  const [state, setState] = useState<D | R>(defaultValue);\n\n  const actions = useMemo(() => {\n    const reverseValueOrigin = (reverseValue === undefined ? !defaultValue : reverseValue) as D | R;\n    const toggle = () => setState((s) => (s === defaultValue ? reverseValueOrigin : defaultValue));\n    const set = (value: D | R) => setState(value);\n    const setLeft = () => setState(defaultValue);\n    const setRight = () => setState(reverseValueOrigin);\n\n    return {\n      toggle,\n      set,\n      setLeft,\n      setRight,\n    };\n  }, []);\n\n  return [state, actions];\n}\n\nexport default useToggle;",g={"usetoggle-demo":{component:Object(r["dynamic"])({loader:function(){var e=Object(l["a"])(Object(i["a"])().mark((function e(){return Object(i["a"])().wrap((function(e){while(1)switch(e.prev=e.next){case 0:return e.next=2,n.e(3).then(n.bind(null,"YTnu"));case 2:return e.abrupt("return",e.sent.default);case 3:case"end":return e.stop()}}),e)})));function t(){return e.apply(this,arguments)}return t}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:c},"index.ts":{import:"../index",content:d}},dependencies:{react:{version:"19.1.0"}},identifier:"usetoggle-demo"}}},f=n("Zs1V"),p=n("zIt+"),h=n.n(p);t["default"]=e=>a.a.createElement(h.a,Object(o["a"])({},e,{config:u,demos:g,apis:f}))},RGYn:function(e){e.exports=JSON.parse('{"menus":{"en-US":{"*":[{"path":"/","title":"\u9996\u9875","meta":{}}],"/guide":[{"title":"\u4ecb\u7ecd","path":"/guide"}],"/hooks":[{"title":"\u72b6\u6001","children":[{"path":"/hooks/use-toggle","title":"UseToggle"},{"path":"/hooks/use-local-storage-state","title":"useLoacleStorageState"}]},{"title":"\u4e8b\u4ef6","children":[{"path":"/hooks/use-update-effect","title":"useUpdateEffect"},{"path":"/hooks/use-memoized-fn","title":"useMemoizedFn"}]}],"/":[{"title":"\u9996\u9875","path":"index"}]}},"locales":[{"name":"en-US","label":"English"}],"navs":{"en-US":[{"title":"\u6307\u5357","path":"/guide"},{"title":"Hooks","path":"/hooks"}]},"title":"React Hooks","mode":"site","repository":{"url":"","branch":"master"},"theme":{},"exportStatic":{}}')},Zs1V:function(e){e.exports=JSON.parse("{}")}}]);